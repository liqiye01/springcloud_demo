###订单项目的端口号
server:
  port: 8763
###服务别名（服务注册到注册中心的名字）
spring:
  application:
    name: api-order
  ###如果用到了分布式配置中心，该项目会从配置中心读取文件名为api-order-sit.properties的配置文件信息，没有找到该项目启动报错
  ###注意：如果你没有用到分布式配置中心，要把下面的注释掉，不然没法启动该项目
  cloud:
    config:
      profile: sit   #配置文件中间的参数
      discovery:
        service-id: config-server  #就是发布配置中心那个项目指定的别名
        enabled: true   #开启读取权限
###开启所有端点（开启后ConfigClient可以实时手动读取ConfigServer里更新后的配置文件，要手动用postman用post请求http://ip:该项目端口/actuator/refresh）
management:
  endpoints:
    web:
      exposure:
        include: "*"

eureka:
  client:
    service-url:
      ###当前订单服务注册到的指定注册中心rureka（如果是集群的注册中心，用逗号分隔开）
      defaultZone: http://localhost:8761/eureka/,http://localhost:9761/eureka/
    ###需要将我的服务注册到rureka上
    register-with-eureka: true
    ###需要检索服务
    fetch-registry: true
###开启hystrix熔断器
feign:
  hystrix:
    enabled: true
###(false)禁止服务超时时间（正式上线不要禁止，设置超时时间）
hystrix:
  command:
    default:
      execution:
        timeout:
          enabled: true
        isolation:
          thread:
            ###hystrix的超时时间
            timeoutInMilliseconds: 4000
###ribbon的超时时间（这个时间一般比hystrix的短，因为它有重试）不设置这个feign调用服务超过一秒就会服务降级
ribbon:
  ReadTimeout: 3000
  ConnectTimeout: 3000

